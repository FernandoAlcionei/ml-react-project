{"version":3,"sources":["components/Button/index.js","containers/product-details/components/Product/index.js","containers/product-details/containers/ProductDetailsView.js","containers/product-details/containers/ProdutoDetailsContainer.js"],"names":["Button","label","onClick","btnType","className","disable","data-testid","disabled","type","getClasses","defaultProps","withTranslation","decimals","product","buy","t","src","picture","alt","title","condition","sold_quantity","formatPrice","price","amount","currency","description","ProductDetailsView","props","state","this","getProductDetails","location","id","match","params","window","scrollTo","document","getParamUrl","clearReducer","buyProduct","loadingView","Loader","show","renderProduct","Component","ProductDetailsContainer","connect","productDetailsReducer","dispatch","sagaProductDetails","sagaBuyProduct"],"mappings":"mSAKMA,G,OAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,QAAvC,OACb,4BACEC,cAAY,mBACZC,SAAUF,EACVG,KAAK,SACLJ,UAAWK,YAAW,CAAC,gBAAiBN,EAASC,IACjDF,QAASA,GAEPD,KAYND,EAAOU,aAAe,CACpBN,UAAW,GACXD,QAAS,cACTE,SAAS,GAGIL,QC2BAW,G,OAAAA,eAnDC,SAAC,GAAyB,IACnBC,EADJC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,EAG/B,OACE,yBAAKX,UAAU,qBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cAAcY,IAAKH,EAAQI,QAASC,IAAKL,EAAQM,SAGlE,yBAAKf,UAAU,gBACb,0BAAMA,UAAU,iBACZS,EAAQO,UADZ,MAC4BP,EAAQQ,cADpC,IACqDN,EAAE,aAGvD,wBAAIX,UAAU,SACVS,EAAQM,OAGZ,yBAAKf,UAAU,SACb,8BACIkB,YAAYT,EAAQU,MAAMC,OAAQX,EAAQU,MAAME,WAEpD,0BAAMrB,UAAU,YAtBsB,KAA3BQ,EAuBKC,EAAQU,MAAMX,UAvBY,KAAOA,IA2BnD,kBAAC,EAAD,CAAQR,UAAU,UAAUF,QAAS,kBAAMY,KAAOb,MAAOc,EAAE,eAI/D,yBAAKX,UAAU,qBACb,0BAAMA,UAAU,qBACbW,EAAE,+BAGL,uBAAGX,UAAU,eACTS,EAAQa,mBCrCdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,gEAKE,IAAD,EACeC,KAAKF,MAA9BG,EADU,EACVA,kBAAmBhB,EADT,EACSA,EADT,EAE8Be,KAAKF,MAA7CI,EAFU,EAEVA,SAA6BC,EAFnB,EAEAC,MAASC,OAAUF,GAErCG,OAAOC,SAAS,EAAG,GAEnBC,SAASnB,MAAQoB,YAAY,QAASP,GAEtCD,EAAkBE,EAAIlB,K,8CAKtByB,EADyBV,KAAKF,MAAtBY,kB,4BAIH,IAAD,EACuCV,KAAKF,MAAxCb,EADJ,EACIA,EAAckB,EADlB,EACOpB,QAAWoB,IAEtBQ,EAHI,EACwBA,YAEjBR,EAAIlB,K,sCAGA,IAAD,SACmBe,KAAKF,MAA9Bc,EADM,EACNA,YAAa7B,EADP,EACOA,QAErB,OAAK6B,GAAe7B,EAAQoB,GAExB,kBAAC,EAAD,CAASnB,IAAK,kBAAM,EAAKA,OAAOD,QAASA,IAItC,O,+BAGC,IACA6B,EAAgBZ,KAAKF,MAArBc,YAER,OACE,yBAAKtC,UAAU,gBACb,kBAACuC,EAAA,EAAD,CAAQC,KAAMF,IAEZZ,KAAKe,qB,GA/CkBC,aAgElBnC,gBAAkBgB,G,QCpE3BoB,EAA0BpB,EAajBqB,uBAXS,SAACnB,GAAD,MAAY,CAClChB,QAASgB,EAAMoB,sBAAsBpC,QACrC6B,YAAab,EAAMoB,sBAAsBP,gBAGhB,SAACQ,GAAD,MAAe,CACxCV,aAAc,kBAAMU,EAASV,gBAC7BT,kBAAmB,SAACE,EAAIlB,GAAL,OAAWmC,EAASC,YAAmBlB,EAAIlB,KAC9D0B,WAAY,SAACR,EAAIlB,GAAL,OAAWmC,EAASE,YAAenB,EAAIlB,QAGtCiC,CAA6CD","file":"static/js/3.fa94816b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getClasses } from '../../lib/utils';\nimport './styles.scss';\n\nconst Button = ({ label, onClick, btnType, className, disable }) => (\n  <button\n    data-testid=\"button-component\"\n    disabled={disable}\n    type=\"button\"\n    className={getClasses(['btn-component', btnType, className])}\n    onClick={onClick}\n  >\n    { label }\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  btnType: PropTypes.string,\n  disable: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: '',\n  btnType: 'btn-primary',\n  disable: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '../../../../components/Button';\nimport { formatPrice } from '../../../../lib/utils';\nimport './styles.scss';\n\nconst Product = ({ product, buy, t }) => {\n  const getDecimals = (decimals) => (decimals === 0 ? '00' : decimals);\n\n  return (\n    <div className=\"product-component\">\n      <div className=\"wrap-product-info\">\n        <div className=\"wrap-product-img\">\n          <img className=\"product-img\" src={product.picture} alt={product.title} />\n        </div>\n\n        <div className=\"product-info\">\n          <span className=\"sold-quantity\">\n            { product.condition } - { product.sold_quantity } {t('vendidos')}\n          </span>\n\n          <h2 className=\"title\">\n            { product.title }\n          </h2>\n\n          <div className=\"price\">\n            <span>\n              { formatPrice(product.price.amount, product.price.currency) }\n            </span>\n            <span className=\"decimals\">\n              { getDecimals(product.price.decimals) }\n            </span>\n          </div>\n\n          <Button className=\"buy-btn\" onClick={() => buy()} label={t('comprar')} />\n        </div>\n      </div>\n\n      <div className=\"wrap-descriptions\">\n        <span className=\"description-label\">\n          {t('Descripci√≥n del produto')}\n        </span>\n\n        <p className=\"description\">\n          { product.description }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  buy: PropTypes.func.isRequired,\n  product: PropTypes.object.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(Product);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport './styles.scss';\nimport Loader from '../../../components/Loader';\nimport { getParamUrl } from '../../../lib/utils';\nimport Product from '../components/Product';\n\nclass ProductDetailsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { getProductDetails, t } = this.props;\n    const { location, match: { params: { id } } } = this.props;\n\n    window.scrollTo(0, 0);\n\n    document.title = getParamUrl('title', location);\n\n    getProductDetails(id, t);\n  }\n\n  componentWillUnmount() {\n    const { clearReducer } = this.props;\n    clearReducer();\n  }\n\n  buy() {\n    const { t, product: { id }, buyProduct } = this.props;\n\n    buyProduct(id, t);\n  }\n\n  renderProduct() {\n    const { loadingView, product } = this.props;\n\n    if (!loadingView && product.id) {\n      return (\n        <Product buy={() => this.buy()} product={product} />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { loadingView } = this.props;\n\n    return (\n      <div className=\"product-view\">\n        <Loader show={loadingView} />\n\n        { this.renderProduct() }\n      </div>\n    );\n  }\n}\n\nProductDetailsView.propTypes = {\n  t: PropTypes.func.isRequired,\n  clearReducer: PropTypes.func.isRequired,\n  getProductDetails: PropTypes.func.isRequired,\n  buyProduct: PropTypes.func.isRequired,\n  product: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  loadingView: PropTypes.bool.isRequired,\n  match: PropTypes.shape({ params: PropTypes.shape({ id: PropTypes.string }).isRequired }).isRequired,\n};\n\nexport default withTranslation()(ProductDetailsView);\n","import { connect } from 'react-redux';\nimport ProductDetailsView from './ProductDetailsView';\nimport { clearReducer, sagaProductDetails, sagaBuyProduct } from '../actions';\n\nconst ProductDetailsContainer = ProductDetailsView;\n\nconst mapStateToProps = (state) => ({\n  product: state.productDetailsReducer.product,\n  loadingView: state.productDetailsReducer.loadingView,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearReducer: () => dispatch(clearReducer()),\n  getProductDetails: (id, t) => dispatch(sagaProductDetails(id, t)),\n  buyProduct: (id, t) => dispatch(sagaBuyProduct(id, t)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetailsContainer);\n"],"sourceRoot":""}