{"version":3,"sources":["components/Button/index.js","containers/product-details/components/Product/index.js","containers/product-details/containers/ProductDetailsView.js","containers/product-details/containers/ProdutoDetailsContainer.js"],"names":["Button","label","onClick","btnType","className","disable","data-testid","disabled","type","getClasses","defaultProps","Product","decimals","product","buy","src","picture","alt","title","condition","sold_quantity","formatPrice","price","amount","currency","description","ProductDetailsView","props","state","getProductDetails","this","location","id","match","params","window","scrollTo","document","getParamUrl","clearReducer","buyProduct","loadingView","Loader","show","renderProduct","Component","ProductDetailsContainer","connect","productDetailsReducer","dispatch","sagaProductDetails","sagaBuyProduct"],"mappings":"0RAKMA,G,OAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,QAAvC,OACb,4BACEC,cAAY,mBACZC,SAAUF,EACVG,KAAK,SACLJ,UAAWK,YAAW,CAAC,gBAAiBN,EAASC,IACjDF,QAASA,GAEPD,KAYND,EAAOU,aAAe,CACpBN,UAAW,GACXD,QAAS,cACTE,SAAS,GAGIL,QCyBAW,G,OAlDC,SAAC,GAAsB,IAChBC,EADJC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAG1B,OACE,yBAAKV,UAAU,qBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cAAcW,IAAKF,EAAQG,QAASC,IAAKJ,EAAQK,SAGlE,yBAAKd,UAAU,gBACb,0BAAMA,UAAU,iBACZS,EAAQM,UADZ,MAC4BN,EAAQO,cADpC,aAIA,wBAAIhB,UAAU,SACVS,EAAQK,OAGZ,yBAAKd,UAAU,SACb,8BACIiB,YAAYR,EAAQS,MAAMC,OAAQV,EAAQS,MAAME,WAEpD,0BAAMpB,UAAU,YAtBsB,KAA3BQ,EAuBKC,EAAQS,MAAMV,UAvBY,KAAOA,IA2BnD,kBAAC,EAAD,CAAQR,UAAU,UAAUF,QAAS,kBAAMY,KAAOb,MAAM,cAI5D,yBAAKG,UAAU,qBACb,0BAAMA,UAAU,qBAAhB,8BAIA,uBAAGA,UAAU,eACTS,EAAQY,iBC0BLC,E,kDA9Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,gEAKE,IACXC,EAAsBC,KAAKH,MAA3BE,kBADU,EAE8BC,KAAKH,MAA7CI,EAFU,EAEVA,SAA6BC,EAFnB,EAEAC,MAASC,OAAUF,GAErCG,OAAOC,SAAS,EAAG,GAEnBC,SAASnB,MAAQoB,YAAY,QAASP,GAEtCF,EAAkBG,K,8CAKlBO,EADyBT,KAAKH,MAAtBY,kB,4BAIH,IAAD,EACoCT,KAAKH,MAA1BK,EADf,EACInB,QAAWmB,IAEnBQ,EAHI,EACqBA,YAEdR,K,sCAGI,IAAD,SACmBF,KAAKH,MAA9Bc,EADM,EACNA,YAAa5B,EADP,EACOA,QAErB,OAAK4B,GAAe5B,EAAQmB,GAExB,kBAAC,EAAD,CAASlB,IAAK,kBAAM,EAAKA,OAAOD,QAASA,IAItC,O,+BAGC,IACA4B,EAAgBX,KAAKH,MAArBc,YAER,OACE,yBAAKrC,UAAU,gBACb,kBAACsC,EAAA,EAAD,CAAQC,KAAMF,IAEZX,KAAKc,qB,GA/CkBC,a,QCH3BC,EAA0BpB,EAajBqB,uBAXS,SAACnB,GAAD,MAAY,CAClCf,QAASe,EAAMoB,sBAAsBnC,QACrC4B,YAAab,EAAMoB,sBAAsBP,gBAGhB,SAACQ,GAAD,MAAe,CACxCV,aAAc,kBAAMU,EAASV,gBAC7BV,kBAAmB,SAACG,GAAD,OAAQiB,EAASC,YAAmBlB,KACvDQ,WAAY,SAACR,GAAD,OAAQiB,EAASE,YAAenB,QAG/Be,CAA6CD","file":"static/js/3.0cca6c4b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getClasses } from '../../lib/utils';\nimport './styles.scss';\n\nconst Button = ({ label, onClick, btnType, className, disable }) => (\n  <button\n    data-testid=\"button-component\"\n    disabled={disable}\n    type=\"button\"\n    className={getClasses(['btn-component', btnType, className])}\n    onClick={onClick}\n  >\n    { label }\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  btnType: PropTypes.string,\n  disable: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: '',\n  btnType: 'btn-primary',\n  disable: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Button from '../../../../components/Button';\nimport { formatPrice } from '../../../../lib/utils';\nimport './styles.scss';\n\nconst Product = ({ product, buy }) => {\n  const getDecimals = (decimals) => (decimals === 0 ? '00' : decimals);\n\n  return (\n    <div className=\"product-component\">\n      <div className=\"wrap-product-info\">\n        <div className=\"wrap-product-img\">\n          <img className=\"product-img\" src={product.picture} alt={product.title} />\n        </div>\n\n        <div className=\"product-info\">\n          <span className=\"sold-quantity\">\n            { product.condition } - { product.sold_quantity } vendidos\n          </span>\n\n          <h2 className=\"title\">\n            { product.title }\n          </h2>\n\n          <div className=\"price\">\n            <span>\n              { formatPrice(product.price.amount, product.price.currency) }\n            </span>\n            <span className=\"decimals\">\n              { getDecimals(product.price.decimals) }\n            </span>\n          </div>\n\n          <Button className=\"buy-btn\" onClick={() => buy()} label=\"Comprar\" />\n        </div>\n      </div>\n\n      <div className=\"wrap-descriptions\">\n        <span className=\"description-label\">\n          Descripci√≥n del produto\n        </span>\n\n        <p className=\"description\">\n          { product.description }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  buy: PropTypes.func.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nexport default Product;\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './styles.scss';\nimport Loader from '../../../components/Loader';\nimport { getParamUrl } from '../../../lib/utils';\nimport Product from '../components/Product';\n\nclass ProductDetailsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { getProductDetails } = this.props;\n    const { location, match: { params: { id } } } = this.props;\n\n    window.scrollTo(0, 0);\n\n    document.title = getParamUrl('title', location);\n\n    getProductDetails(id);\n  }\n\n  componentWillUnmount() {\n    const { clearReducer } = this.props;\n    clearReducer();\n  }\n\n  buy() {\n    const { product: { id }, buyProduct } = this.props;\n\n    buyProduct(id);\n  }\n\n  renderProduct() {\n    const { loadingView, product } = this.props;\n\n    if (!loadingView && product.id) {\n      return (\n        <Product buy={() => this.buy()} product={product} />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { loadingView } = this.props;\n\n    return (\n      <div className=\"product-view\">\n        <Loader show={loadingView} />\n\n        { this.renderProduct() }\n      </div>\n    );\n  }\n}\n\nProductDetailsView.propTypes = {\n  clearReducer: PropTypes.func.isRequired,\n  getProductDetails: PropTypes.func.isRequired,\n  buyProduct: PropTypes.func.isRequired,\n  product: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  loadingView: PropTypes.bool.isRequired,\n  match: PropTypes.shape({ params: PropTypes.shape({ id: PropTypes.string }).isRequired }).isRequired,\n};\n\nexport default ProductDetailsView;\n","import { connect } from 'react-redux';\nimport ProductDetailsView from './ProductDetailsView';\nimport { clearReducer, sagaProductDetails, sagaBuyProduct } from '../actions';\n\nconst ProductDetailsContainer = ProductDetailsView;\n\nconst mapStateToProps = (state) => ({\n  product: state.productDetailsReducer.product,\n  loadingView: state.productDetailsReducer.loadingView,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearReducer: () => dispatch(clearReducer()),\n  getProductDetails: (id) => dispatch(sagaProductDetails(id)),\n  buyProduct: (id) => dispatch(sagaBuyProduct(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetailsContainer);\n"],"sourceRoot":""}